#!/usr/bin/env python
import re
import sys
from collections import defaultdict

arguments = sys.argv
print arguments

FileName = sys.argv[ 1 ]


File = open( FileName, 'r')

Linenumber = 0
OutFileName = 'extracted-test_' + FileName.rsplit( ".", 1 )[ 0 ]  + ".txt"
OutFile = open(OutFileName, 'w')
DictTEx=defaultdict(list)
for Line in File:

	Line = Line.strip()

	if Linenumber > 0:
		#print ( Linenumber )
		#print ( Line )
		#if Linenumber == 3:break

		ElementList = Line.split( '\t' )

		#print( ElementList )
		#print( 'Track:{} x:{} y:{} z:{}'.format( ElementList[2], ElementList[8], ElementList[9], ElementList[10] ) )
		#print (ext)
		#OutFile.write ('\t'.join(ext) + '\n')
		
		DictTEx[ElementList[2]].append([ ElementList[8], ElementList[9], ElementList[10]])
		#print ([ElementList[2]])
		#print (len(DictTEx[ElementList[2]]))
		#print (keys)
		#print (DictTEx[ElementList[10]])
	Linenumber = Linenumber + 1

#print (len(DictTEx[ElementList[2]]))
#print (DictTEx.keys())

for keys in DictTEx.keys():
	print (keys, len(DictTEx[keys]))

#print (DictTEx['6'])
	#print ([ElementList[8]])
	#print (DictTEx[ElementList[8]])
	#print (DictTEx[ElementList[9]])
	#print (DictTEx[ElementList[10]])

		#print( 'Track:{} x:{} y:{} z:{}'.format( ElementList[2], ElementList[8], ElementList[9], ElementList[10] ) )

		#print (ElementList[2])

#		if keys = 16:
#			print ()
			#if Linenumber == 3:break

#		if len(DictTEx = 16):
			#print (DictTEx[ElementList[2]])
			#if Linenumber == 3:break
	
		
	


File.close()
OutFile.close()